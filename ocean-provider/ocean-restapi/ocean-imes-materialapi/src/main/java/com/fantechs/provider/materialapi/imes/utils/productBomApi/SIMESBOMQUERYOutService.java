
package com.fantechs.provider.materialapi.imes.utils.productBomApi;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceException;
import javax.xml.ws.WebServiceFeature;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebServiceClient(name = "SI_MES_BOM_QUERY_OutService", targetNamespace = "http://leisai.com/None_ECC", wsdlLocation = "http://sappodev.leisai.com:50000/dir/wsdl?p=ic/e1a7d294ffba3c4caeb8be62067c617d")
public class SIMESBOMQUERYOutService
    extends Service
{

    private final static URL SIMESBOMQUERYOUTSERVICE_WSDL_LOCATION;
    private final static WebServiceException SIMESBOMQUERYOUTSERVICE_EXCEPTION;
    private final static QName SIMESBOMQUERYOUTSERVICE_QNAME = new QName("http://leisai.com/None_ECC", "SI_MES_BOM_QUERY_OutService");

    static {
        URL url = null;
        WebServiceException e = null;
        try {
            url = new URL("http://sappodev.leisai.com:50000/dir/wsdl?p=ic/e1a7d294ffba3c4caeb8be62067c617d");
        } catch (MalformedURLException ex) {
            e = new WebServiceException(ex);
        }
        SIMESBOMQUERYOUTSERVICE_WSDL_LOCATION = url;
        SIMESBOMQUERYOUTSERVICE_EXCEPTION = e;
    }

    public SIMESBOMQUERYOutService() {
        super(__getWsdlLocation(), SIMESBOMQUERYOUTSERVICE_QNAME);
    }

    public SIMESBOMQUERYOutService(WebServiceFeature... features) {
        super(__getWsdlLocation(), SIMESBOMQUERYOUTSERVICE_QNAME, features);
    }

    public SIMESBOMQUERYOutService(URL wsdlLocation) {
        super(wsdlLocation, SIMESBOMQUERYOUTSERVICE_QNAME);
    }

    public SIMESBOMQUERYOutService(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, SIMESBOMQUERYOUTSERVICE_QNAME, features);
    }

    public SIMESBOMQUERYOutService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public SIMESBOMQUERYOutService(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * 
     * @return
     *     returns SIMESBOMQUERYOut
     */
    @WebEndpoint(name = "HTTP_Port")
    public SIMESBOMQUERYOut getHTTPPort() {
        return super.getPort(new QName("http://leisai.com/None_ECC", "HTTP_Port"), SIMESBOMQUERYOut.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns SIMESBOMQUERYOut
     */
    @WebEndpoint(name = "HTTP_Port")
    public SIMESBOMQUERYOut getHTTPPort(WebServiceFeature... features) {
        return super.getPort(new QName("http://leisai.com/None_ECC", "HTTP_Port"), SIMESBOMQUERYOut.class, features);
    }

    /**
     * 
     * @return
     *     returns SIMESBOMQUERYOut
     */
    @WebEndpoint(name = "HTTPS_Port")
    public SIMESBOMQUERYOut getHTTPSPort() {
        return super.getPort(new QName("http://leisai.com/None_ECC", "HTTPS_Port"), SIMESBOMQUERYOut.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns SIMESBOMQUERYOut
     */
    @WebEndpoint(name = "HTTPS_Port")
    public SIMESBOMQUERYOut getHTTPSPort(WebServiceFeature... features) {
        return super.getPort(new QName("http://leisai.com/None_ECC", "HTTPS_Port"), SIMESBOMQUERYOut.class, features);
    }

    private static URL __getWsdlLocation() {
        if (SIMESBOMQUERYOUTSERVICE_EXCEPTION!= null) {
            throw SIMESBOMQUERYOUTSERVICE_EXCEPTION;
        }
        return SIMESBOMQUERYOUTSERVICE_WSDL_LOCATION;
    }

}
