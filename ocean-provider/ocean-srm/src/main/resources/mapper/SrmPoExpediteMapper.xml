<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.fantechs.provider.srm.mapper.SrmPoExpediteMapper">
  <resultMap id="BaseResultMap" type="com.fantechs.common.base.general.entity.srm.SrmPoExpedite">
    <!--
      WARNING - @mbg.generated
    -->
    <id column="po_expedite_id" jdbcType="BIGINT" property="poExpediteId" />
    <result column="purchase_order_id" jdbcType="BIGINT" property="purchaseOrderId" />
    <result column="supplier_id" jdbcType="BIGINT" property="supplierId" />
    <result column="status" jdbcType="TINYINT" property="status" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="org_id" jdbcType="BIGINT" property="orgId" />
    <result column="create_user_id" jdbcType="BIGINT" property="createUserId" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="modified_user_id" jdbcType="BIGINT" property="modifiedUserId" />
    <result column="modified_time" jdbcType="TIMESTAMP" property="modifiedTime" />
    <result column="is_delete" jdbcType="TINYINT" property="isDelete" />
    <result column="option1" jdbcType="VARCHAR" property="option1" />
    <result column="option2" jdbcType="VARCHAR" property="option2" />
    <result column="option3" jdbcType="VARCHAR" property="option3" />
  </resultMap>

  <resultMap id="BaseResultMapDto" extends="BaseResultMap" type="com.fantechs.common.base.general.dto.srm.SrmPoExpediteDto">
    <result column="purchase_order_code" jdbcType="VARCHAR" property="purchaseOrderCode" />
    <result column="order_status" jdbcType="TINYINT" property="orderStatus" />
    <result column="supplier_name" jdbcType="VARCHAR" property="supplierName" />
    <result column="supplier_code" jdbcType="VARCHAR" property="supplierCode" />
    <result column="order_date" jdbcType="TIMESTAMP" property="orderDate" />
    <result column="purchase_dept_name" jdbcType="VARCHAR" property="purchaseDeptName" />
    <result column="makeOrder_user_name" jdbcType="VARCHAR" property="makeOrderUserName" />
    <result column="make_order_date" jdbcType="TIMESTAMP" property="makeOrderDate" />
    <result column="order_remark" jdbcType="VARCHAR" property="orderRemark" />
    <result column="create_user_name" jdbcType="VARCHAR" property="createUserName" />
    <result column="modified_user_name" jdbcType="VARCHAR" property="modifiedUserName" />

    <result column="e_mail" jdbcType="VARCHAR" property="eMail"/>
    <result column="mobile_phone" jdbcType="VARCHAR" property="mobilePhone"/>
    <result column="telephone" jdbcType="VARCHAR" property="telephone"/>
    <result column="complete_detail" jdbcType="VARCHAR" property="completeDetail"/>
  </resultMap>

  <sql id="Base_Column_List">
    spe.po_expedite_id,
    spe.purchase_order_id,
    spe.supplier_id,
    spe.status,
    spe.remark,
    spe.org_id,
    spe.create_user_id,
    spe.create_time,
    spe.modified_user_id,
    spe.modified_time
  </sql>

  <select id="findList" resultMap="BaseResultMapDto" parameterType="map" >
    select <include refid="Base_Column_List"></include>,
    csu.user_name as create_user_name,
    msu.user_name as modified_user_name,
    opo.purchase_order_code,
    bs.supplier_name,
    bs.supplier_code,
    bs.e_mail,
    bs.mobile_phone,
    bs.telephone,
    ba.complete_detail,
    opo.order_status,
    opo.order_date,
    bd.dept_name as purchase_dept_name,
    mosu.user_name as makeOrder_user_name,
    opo.make_order_date,
    opo.remark as order_remark
    from srm_po_expedite spe
    left join om_purchase_order opo on opo.purchase_order_id = spe.purchase_order_id
    left join base_supplier bs on bs.supplier_id = spe.supplier_id
    left join sys_user csu on csu.user_id = spe.create_user_id
    left join sys_user msu on msu.user_id = spe.modified_user_id
    left join base_dept bd on bd.dept_id = opo.purchase_dept_id
    left join sys_user mosu on mosu.user_id = opo.make_order_user_id
    left join base_address ba on ba.address_id = bs.address_id
    <where>
      <if test="supplierId != null">
        and spe.supplier_id = #{supplierId}
      </if>
      <if test="purchaseOrderCode != null and purchaseOrderCode != ''">
        and opo.purchase_order_code like CONCAT('%', #{purchaseOrderCode}, '%')
      </if>
      <if test="orderStatus != null ">
        and opo.order_status = #{orderStatus}
      </if>
      <if test="supplierName != null and supplierName != ''">
        and bs.supplier_name like CONCAT('%', #{supplierName}, '%')
      </if>
      <if test="purchaseDeptName != null and purchaseDeptName != ''">
        and bd.dept_name like CONCAT('%', #{purchaseDeptName}, '%')
      </if>
      <if test="makeOrderUserName != null and makeOrderUserName != ''">
        and mosu.user_name like CONCAT('%', #{makeOrderUserName}, '%')
      </if>
      <if test="orderRemark != null and orderRemark != ''">
        and opo.remark like CONCAT('%', #{orderRemark}, '%')
      </if>
      <if test="orgId != null">
        and spe.org_id = #{orgId}
      </if>
      <if test="createUserId != null">
        and spe.create_user_id = #{createUserId}
      </if>
      <if test="modifiedUserId != null">
        and spe.modified_user_id = #{modifiedUserId}
      </if>
      <if test="remark != null and remark != ''">
        and spe.remark like CONCAT('%', #{remark}, '%')
      </if>
      <if test="orderDateStart != null and orderDateStart != '' and orderDateEnd != null and orderDateEnd != ''">
        and date_format(spe.order_date, '%Y-%m-%d') between #{orderDateStart} and #{orderDateEnd}
      </if>
      <if test="makeOrderDateStart != null and makeOrderDateStart != '' and makeOrderDateEnd != null and makeOrderDateEnd != ''">
        and date_format(spe.make_order_date, '%Y-%m-%d') between #{makeOrderDateStart} and #{makeOrderDateEnd}
      </if>
      <if test="modifiedTimeStart != null and modifiedTimeStart != '' and modifiedTimeEnd != null and modifiedTimeEnd != ''">
        and date_format(spe.modified_time, '%Y-%m-%d') between #{modifiedTimeStart} and #{modifiedTimeEnd}
      </if>
      <if test="startTime != null and startTime != '' and endTime != null and endTime != ''">
        and date_format(spe.create_time, '%Y-%m-%d') between #{startTime} and #{endTime}
      </if>
    </where>
    order by spe.create_time
  </select>

</mapper>
