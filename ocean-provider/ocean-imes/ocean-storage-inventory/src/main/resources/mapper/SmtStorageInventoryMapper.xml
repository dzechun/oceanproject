<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.fantechs.provider.imes.storage.mapper.SmtStorageInventoryMapper">

    <resultMap id="BaseResultMap" type="com.fantechs.common.base.entity.storage.SmtStorageInventory">
        <id column="storing_inventory_id" jdbcType="BIGINT" property="storingInventoryId"/>
        <result column="storage_id" jdbcType="BIGINT" property="storageId"/>
        <result column="material_id" jdbcType="BIGINT" property="materialId"/>
        <result column="level" jdbcType="VARCHAR" property="level"/>
        <result column="quantity" jdbcType="DECIMAL" property="quantity"/>
        <result column="status" jdbcType="TINYINT" property="status" />
        <result column="create_user_id" jdbcType="BIGINT" property="createUserId"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="modified_user_id" jdbcType="BIGINT" property="modifiedUserId"/>
        <result column="modified_time" jdbcType="TIMESTAMP" property="modifiedTime"/>
        <result column="organization_id" jdbcType="BIGINT" property="organizationId" />
        <result column="remark" jdbcType="VARCHAR" property="remark" />
        <result column="is_delete" jdbcType="TINYINT" property="isDelete" />
    </resultMap>

    <resultMap id="BaseResultMapDto" extends="BaseResultMap" type="com.fantechs.common.base.dto.storage.SmtStorageInventoryDto">
        <result column="create_user_name" jdbcType="VARCHAR" property="createUserName"/>
        <result column="modified_user_name" jdbcType="VARCHAR" property="modifiedUserName"/>
        <result column="storage_name" jdbcType="VARCHAR" property="storageName"/>
        <result column="material_desc" jdbcType="VARCHAR" property="materialDesc"/>
        <result column="version" jdbcType="VARCHAR" property="version"/>
        <result column="storage_code" jdbcType="VARCHAR" property="storageCode"/>
        <result column="organization_name" jdbcType="VARCHAR" property="organizationName" />
    </resultMap>

    <sql id="Base_Column_List">
        ssi.storing_inventory_id,ssi.storage_id,ssi.material_id,ssi.level,ssi.quantity,
        ssi.create_user_id,ssi.create_time,ssi.modified_user_id,ssi.modified_time, ssi.organization_id,
	    ssi.remark,ssi.is_delete,ssi.status
    </sql>

    <select id="findList" resultMap="BaseResultMapDto" parameterType="map">
        SELECT<include refid="Base_Column_List"/>, su.user_name AS create_user_name, sus.user_name AS modified_user_name,
        ss.storage_name,ss.storage_code,sm.material_desc,sm.version, bo.organization_name
        FROM smt_storage_inventory ssi
        LEFT JOIN ocean.sys_user su ON ssi.create_user_id = su.user_id
        LEFT JOIN ocean.sys_user sus ON ssi.modified_user_id = sus.user_id
        LEFT JOIN fantech_imes.smt_storage ss ON ss.storage_id = ssi.storage_id
        LEFT JOIN fantech_imes.smt_material sm ON sm.material_id = ssi.material_id
        LEFT JOIN fantech_imes.base_organization bo ON ssi.organization_id = bo.organization_id
        <where>
            <if test="materialDesc!= null and materialDesc !='' ">
                and sm.material_desc like CONCAT('%', #{materialDesc}, '%')
            </if>
            <if test="storageCode!= null and storageCode !='' ">
                and ss.storage_code like CONCAT('%', #{storageCode}, '%')
            </if>
            <if test="storageName!= null and storageName !='' ">
                and ss.storage_name like CONCAT('%', #{storageName}, '%')
            </if>
            <if test="materialCode!= null and materialCode !='' ">
                and sm.material_code like CONCAT('%', #{materialCode}, '%')
            </if>
            <if test="level!= null and level !='' ">
                and ssi.level like CONCAT('%', #{level}, '%')
            </if>
            <if test="materialId!= null and materialId !='' ">
                and ssi.material_id = #{materialId}
            </if>
            <if test="storageId!= null and storageId !='' ">
                and ssi.storage_id = #{storageId}
            </if>
            <if test="startTime!= null and startTime!= '' and endTime!= null and endTime!= ''">
                and date_format(ssi.create_time, '%Y-%m-%d') BETWEEN #{startTime} AND #{endTime}
            </if>
        </where>
        order by ssi.create_time desc
    </select>

    <update id="refreshQuantity" parameterType="map">
        update smt_storage_inventory set quantity=quantity+#{quantity} where  storage_id = #{storageId}
    </update>

</mapper>
