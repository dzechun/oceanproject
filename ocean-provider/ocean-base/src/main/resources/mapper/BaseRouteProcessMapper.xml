<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.fantechs.provider.base.mapper.BaseRouteProcessMapper">
    <resultMap id="BaseResultMap" type="com.fantechs.common.base.general.entity.basic.BaseRouteProcess">
        <id column="route_process_id" jdbcType="BIGINT" property="routeProcessId"/>
        <result column="route_id" jdbcType="BIGINT" property="routeId"/>
        <result column="section_id" jdbcType="BIGINT" property="sectionId"/>
        <result column="process_id" jdbcType="BIGINT" property="processId"/>
        <result column="next_process_id" jdbcType="BIGINT" property="nextProcessId"/>
        <result column="previous_process_id" jdbcType="BIGINT" property="previousProcessId"/>
        <result column="standard_time" jdbcType="INTEGER" property="standardTime" />
        <result column="readiness_time" jdbcType="INTEGER" property="readinessTime" />
        <result column="order_num" jdbcType="INTEGER" property="orderNum"/>
        <result column="is_pass" jdbcType="TINYINT" property="isPass"/>
        <result column="is_must_pass" jdbcType="TINYINT" property="isMustPass"/>
        <result column="inspection_time" jdbcType="INTEGER" property="inspectionTime"/>
        <result column="qualification_id" jdbcType="BIGINT" property="qualificationId"/>
        <result column="org_id" jdbcType="BIGINT" property="organizationId"/>
        <result column="remark" jdbcType="VARCHAR" property="remark"/>

        <result column="process_category_code" jdbcType="VARCHAR" property="processCategoryCode"/>
        <result column="route_name" jdbcType="VARCHAR" property="routeName"/>
        <result column="next_route_name" jdbcType="VARCHAR" property="nextProcessName"/>
        <result column="previous_process_name" jdbcType="BIGINT" property="previousProcessName"/>
        <result column="section_name" jdbcType="VARCHAR" property="sectionName"/>
        <result column="process_name" jdbcType="VARCHAR" property="processName"/>
        <result column="organization_name" jdbcType="VARCHAR" property="organizationName"/>
        <result column="readiness_time" jdbcType="TIMESTAMP" property="readinessTime" />
        <result column="standard_time" jdbcType="TIMESTAMP" property="standardTime" />
    </resultMap>

    <sql id="Base_Column_List">
        srp.route_process_id,
        srp.route_id,
        srp.section_id,
        srp.process_id,
        srp.next_process_id,
        srp.previous_process_id,
        srp.standard_time,
        srp.readiness_time,
        srp.order_num,
        srp.is_pass,
        srp.is_must_pass,
        srp.inspection_time,
        srp.qualification_id,
        srp.remark,
        srp.org_id
    </sql>

    <select id="findList" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select <include refid="Base_Column_List"></include>,
        bpc.process_category_code,
        sps.process_name as next_route_name,
        sr.route_name,
        ws.section_name,
        sp.process_name,
        p.process_name as previous_process_name,
        bo.organization_name
        from base_route_process srp
        left join base_route sr on srp.route_id=sr.route_id
        left join base_workshop_section ws on srp.section_id=ws.section_id
        left join base_process sp on srp.process_id=sp.process_id
        left join base_process_category bpc on sp.process_category_id=bpc.process_category_id
        left join base_process sps on srp.next_process_id=sps.process_id
        left join base_process p on srp.previous_process_id=p.process_id
        LEFT JOIN base_organization bo ON srp.org_id = bo.organization_id
        <where>
            <if test="routeId != null">
                and srp.route_id=#{routeId}
            </if>
        </where>
        order by srp.order_num
    </select>

    <update id="configureProcess" parameterType="map">
        update base_route_process
        set is_must_pass     = #{isMustPass},
            inspection_time  = #{inspectionTime},
            qualification_id = #{qualificationId}
        where route_id = ${routeId}
          and process_id = ${processId}
    </update>
</mapper>
