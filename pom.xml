<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.1.1.RELEASE</version>
    </parent>



    <groupId>com.fantechs</groupId>
    <artifactId>ocean-parent</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <name>ocean-parent</name>
    <packaging>pom</packaging>
    <description>Demo project for Spring Boot</description>

    <modules>
        <module>ocean-admin</module>  <!-- 监控中心 -->
        <module>ocean-common</module>  <!-- 公共模块 -->
        <module>ocean-txlcn</module>  <!-- 分布式锁 -->
        <module>ocean-provider</module>  <!-- 服务中心 -->
        <module>ocean-provider-api</module>  <!-- feign对外接口 -->
        <module>ocean-gateway</module>      <!-- 网关 -->
        <module>ocean-generator</module>    <!-- 代码生成器 -->
        <module>ocean-ureport</module>
        <module>ocean-xxl-job</module>    <!-- 定时任务 -->
        <!-- <module>ocean-doc</module>          &lt;!&ndash; api文档 &ndash;&gt; -->
    </modules>

    <!-- 整合依赖版本管理-->
    <properties>
        <java.version>1.8</java.version>
        <maven-compiler.source>1.8</maven-compiler.source>
        <maven-compiler.target>1.8</maven-compiler.target>
        <spring-cloud.version>Greenwich.SR2</spring-cloud.version>
        <smt-core.version>0.0.1-SNAPSHOT</smt-core.version>
        <swagger.version>2.7.0</swagger.version>
        <druid.version>1.1.10</druid.version>
        <mybati.version>1.1.1</mybati.version>
        <mybati.mapper.version>4.1.5</mybati.mapper.version>
        <freemarker.version>2.3.28</freemarker.version>
        <mybatis-generator.version>1.3.6</mybatis-generator.version>
        <pagehelper.version>1.2.5</pagehelper.version>
        <uuid.version>3.1.2</uuid.version>
        <fastjson.version>1.2.29</fastjson.version>
        <gson.version>2.7</gson.version>
        <commons-lang.version>2.6</commons-lang.version>
        <alidators.version>2.7.0</alidators.version>
        <hessian.version>4.0.60</hessian.version>
        <hessian.version>4.0.60</hessian.version>
        <easypoi-base.version>4.0.0</easypoi-base.version>
        <easypoi-web.version>4.0.0</easypoi-web.version>
        <easypoi-annotation.version>4.0.0</easypoi-annotation.version>
        <txlcn-tc.version>5.0.2.RELEASE</txlcn-tc.version>
        <!-- 在构建过程中读取源码时使用的字符集 -->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <boot-jar-output>../lj</boot-jar-output>
    </properties>

    <!--管理spring-cloud版本，引入openfeign时不用添加version-->
    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>${spring-cloud.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-mail</artifactId>
        </dependency>
        <!--整合JDBC和事务启动器 -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-jdbc</artifactId>
        </dependency>
        <!-- mysql 驱动包-->
        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
        </dependency>
        <!-- 整合 druid启动器
             druid1.1.6启动器有严重bug，直接导致项目运行失败
             druid1.1.10没有该问题
        -->
        <dependency>
            <groupId>com.alibaba</groupId>
            <artifactId>druid-spring-boot-starter</artifactId>
            <version>${druid.version}</version>
        </dependency>

        <!-- 整合quartz -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-quartz</artifactId>
        </dependency>

        <!-- mybatis的启动器 -->
        <dependency>
            <groupId>org.mybatis.spring.boot</groupId>
            <artifactId>mybatis-spring-boot-starter</artifactId>
            <version>${mybati.version}</version>
        </dependency>

        <!-- 通用mapper的启动器 -->
        <dependency>
            <groupId>tk.mybatis</groupId>
            <artifactId>mapper</artifactId>
            <version>${mybati.mapper.version}</version>
        </dependency>

        <dependency>
            <groupId>tk.mybatis</groupId>
            <artifactId>mapper-spring-boot-starter</artifactId>
            <version>2.0.2</version>
        </dependency>

        <!-- 通用 Mapper 代码生成依赖-->
        <dependency>
            <groupId>org.freemarker</groupId>
            <artifactId>freemarker</artifactId>
            <version>${freemarker.version}</version>
        </dependency>
        <dependency>
            <groupId>org.mybatis.generator</groupId>
            <artifactId>mybatis-generator-core</artifactId>
            <version>${mybatis-generator.version}</version>
        </dependency>

        <!-- 分页插件 -->
        <dependency>
            <groupId>com.github.pagehelper</groupId>
            <artifactId>pagehelper-spring-boot-starter</artifactId>
            <version>${pagehelper.version}</version>
        </dependency>

        <!-- swagger -->
        <dependency>
            <groupId>io.springfox</groupId>
            <artifactId>springfox-swagger2</artifactId>
            <version>${swagger.version}</version>
        </dependency>
        <dependency>
            <groupId>io.springfox</groupId>
            <artifactId>springfox-bean-validators</artifactId>
            <version>${alidators.version}</version>
        </dependency>
        <dependency>
            <groupId>io.springfox</groupId>
            <artifactId>springfox-swagger-ui</artifactId>
            <version>${swagger.version}</version>
        </dependency>
        <!-- Knife4j -->
        <!-- <dependency> -->
        <!--     <groupId>com.github.xiaoymin</groupId> -->
        <!--     <artifactId>knife4j-spring-boot-starter</artifactId> -->
        <!--     &lt;!&ndash; springboot2.1版本, Knife4j必须小于2.0.6&ndash;&gt; -->
        <!--     <version>2.0.5</version> -->
        <!-- </dependency> -->


        <!-- 生成uuid -->
        <dependency>
            <groupId>com.fasterxml.uuid</groupId>
            <artifactId>java-uuid-generator</artifactId>
            <version>${uuid.version}</version>
        </dependency>

        <!-- springboot 使用jackson 用法-->
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
            <exclusions>
                <exclusion>
                    <groupId>com.fasterxml.jackson.core</groupId>
                    <artifactId>jackson-annotations</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-annotations</artifactId>
        </dependency>

        <!-- fastjson-->
        <dependency>
            <groupId>com.alibaba</groupId>
            <artifactId>fastjson</artifactId>
            <version>${fastjson.version}</version>
        </dependency>

        <!-- Gson -->
        <dependency>
            <groupId>com.google.code.gson</groupId>
            <artifactId>gson</artifactId>
            <version>${gson.version}</version>
        </dependency>

        <!-- easypoi -->
        <dependency>
            <groupId>cn.afterturn</groupId>
            <artifactId>easypoi-base</artifactId>
            <version>${easypoi-base.version}</version>
        </dependency>
        <dependency>
            <groupId>cn.afterturn</groupId>
            <artifactId>easypoi-web</artifactId>
            <version>${easypoi-web.version}</version>
        </dependency>
        <dependency>
            <groupId>cn.afterturn</groupId>
            <artifactId>easypoi-annotation</artifactId>
            <version>${easypoi-annotation.version}</version>
        </dependency>

        <!-- 整合 redis -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-redis</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-redis-reactive</artifactId>
            <version>2.0.2.RELEASE</version>
        </dependency>

        <!--AOP-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-aop</artifactId>
        </dependency>

        <!--热部署-->
<!--        <dependency>-->
<!--            <groupId>org.springframework.boot</groupId>-->
<!--            <artifactId>spring-boot-devtools</artifactId>-->
<!--        </dependency>-->

        <!--lombok-->
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
        </dependency>

        <!--hutool-->
        <dependency>
            <groupId>cn.hutool</groupId>
            <artifactId>hutool-all</artifactId>
            <version>4.3.0</version>
        </dependency>

        <!--分布式锁-->
        <dependency>
            <groupId>com.codingapi.txlcn</groupId>
            <artifactId>txlcn-tc</artifactId>
            <exclusions>
                <exclusion>
                    <groupId>com.github.jsqlparser</groupId>
                    <artifactId>jsqlparser</artifactId>
                </exclusion>
            </exclusions>
            <version>${txlcn-tc.version}</version>
        </dependency>
        <dependency>
            <groupId>com.codingapi.txlcn</groupId>
            <artifactId>txlcn-txmsg-netty</artifactId>
            <version>${txlcn-tc.version}</version>
        </dependency>

        <!-- Nacos 配置中心-->
        <dependency>
            <groupId>com.alibaba.cloud</groupId>
            <artifactId>spring-cloud-starter-alibaba-nacos-config</artifactId>
            <version>2.1.1.RELEASE</version>
        </dependency>
        <!-- Nacos 注册中心-->
        <dependency>
            <groupId>com.alibaba.cloud</groupId>
            <artifactId>spring-cloud-starter-alibaba-nacos-discovery</artifactId>
            <version>2.1.1.RELEASE</version>
        </dependency>

        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-openfeign</artifactId>
        </dependency>
        <dependency>
            <groupId>io.github.openfeign</groupId>
            <artifactId>feign-httpclient</artifactId>
            <version>10.1.0</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-undertow</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>
        <!-- Sa-Token 权限认证 -->
        <dependency>
            <groupId>cn.dev33</groupId>
            <artifactId>sa-token-spring-boot-starter</artifactId>
            <version>1.29.0</version>
        </dependency>
        <!-- Sa-Token 整合Redis -->
        <dependency>
            <groupId>cn.dev33</groupId>
            <artifactId>sa-token-dao-redis</artifactId>
            <version>1.29.0</version>
        </dependency>
        <!-- Sa-Token 提供Redis连接池 -->
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-pool2</artifactId>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
            </plugin>
        </plugins>
<!--        <resources>-->
<!--            <resource>-->
<!--                <directory>src/main/resources/bootstrap-${dev.environment}</directory>-->
<!--                <targetPath>WEB-INF/classes</targetPath>-->
<!--            </resource>-->
<!--        </resources>-->
    </build>

<!--    <profiles>-->
<!--        <profile>-->
<!--            &lt;!&ndash;开发环境&ndash;&gt;-->
<!--            <id>dev</id>-->
<!--            <properties>-->
<!--                <dev.environment>dev</dev.environment>-->
<!--            </properties>-->
<!--            <activation>-->
<!--                <activeByDefault>true</activeByDefault>-->
<!--            </activation>-->
<!--        </profile>-->
<!--        <profile>-->
<!--            &lt;!&ndash;测试环境&ndash;&gt;-->
<!--            <id>test</id>-->
<!--            <properties>-->
<!--                <dev.environment>test</dev.environment>-->
<!--            </properties>-->
<!--        </profile>-->
<!--        <profile>-->
<!--            &lt;!&ndash;生产环境&ndash;&gt;-->
<!--            <id>prod</id>-->
<!--            <properties>-->
<!--                <dev.environment>prod</dev.environment>-->
<!--            </properties>-->
<!--        </profile>-->
<!--    </profiles>-->
</project>
